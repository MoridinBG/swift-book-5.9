{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Welcome to Swift","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"]},{"title":"Language Guide","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"]},{"title":"Language Reference","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar"]},{"title":"Revision History","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory"]}],"metadata":{"title":"The Swift Programming Language (5.9)"},"identifier":{"url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language","interfaceLanguage":"swift"},"sections":[],"kind":"article","references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"abstract":[{"text":"Manage the visibility of code by declaration, file, and module.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/accesscontrol","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","kind":"article","title":"Access Control","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting":{"abstract":[{"text":"Determine a valueâ€™s runtime type and give it more specific type information.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/typecasting","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","title":"Type Casting","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutTheLanguageReference":{"abstract":[{"text":"Read the notation that the formal grammar uses.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/aboutthelanguagereference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference","kind":"article","title":"About the Language Reference","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"kind":"article","role":"article","url":"\/documentation\/the-swift-programming-language\/functions","type":"topic","title":"Functions","abstract":[{"text":"Define and call functions, label their arguments, and use their return values.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"kind":"article","role":"article","url":"\/documentation\/the-swift-programming-language\/statements","type":"topic","title":"Statements","abstract":[{"text":"Group expressions and control the flow of execution.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"abstract":[{"text":"Write code that works for multiple types and specify requirements for those types.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/generics","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","title":"Generics","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"abstract":[{"text":"Model custom types that define a list of possible values.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/enumerations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","kind":"article","title":"Enumerations","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"abstract":[{"text":"Model the lifetime of objects and their relationships.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","title":"Automatic Reference Counting","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"abstract":[{"text":"Store and manipulate text.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","kind":"article","title":"Strings and Characters","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties":{"abstract":[{"text":"Access stored and computed values that are part of an instance or type.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/properties","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","title":"Properties","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"abstract":[{"text":"Subclass to add or override functionality.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/inheritance","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","kind":"article","title":"Inheritance","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/SummaryOfTheGrammar":{"abstract":[{"text":"Read the whole formal grammar.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/summaryofthegrammar","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar","title":"Summary of the Grammar","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"abstract":[{"text":"Use macros to generate code at compile time.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/macros","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","kind":"article","title":"Macros","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators":{"abstract":[{"text":"Perform operations like assignment, arithmetic, and comparison.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/basicoperators","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","title":"Basic Operators","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"abstract":[{"type":"text","text":"Match and destructure values."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","url":"\/documentation\/the-swift-programming-language\/patterns","role":"article","kind":"article","type":"topic","title":"Patterns"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"abstract":[{"text":"Structure your code to avoid conflicts when accessing memory.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/memorysafety","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","kind":"article","title":"Memory Safety","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Deinitialization":{"abstract":[{"text":"Release resources that require custom cleanup.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/deinitialization","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","title":"Deinitialization","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"abstract":[{"text":"Perform asynchronous operations.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/concurrency","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","kind":"article","title":"Concurrency","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"abstract":[{"text":"Explore the features and syntax of Swift.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/guidedtour","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","title":"A Swift Tour","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Methods":{"abstract":[{"text":"Define and call functions that are part of an instance or type.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/methods","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods","kind":"article","title":"Methods","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"abstract":[{"text":"Hide implementation details about a valueâ€™s type.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/opaquetypes","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","title":"Opaque and Boxed Types","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"abstract":[{"text":"Generalize declarations to abstract away concrete types.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","kind":"article","title":"Generic Parameters and Arguments","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Compatibility":{"abstract":[{"text":"Learn what functionality is available in older language modes.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/compatibility","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility","title":"Version Compatibility","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts":{"abstract":[{"text":"Access the elements of a collection.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/subscripts","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","kind":"article","title":"Subscripts","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"abstract":[{"text":"Structure code with branches, loops, and early exits.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/controlflow","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","title":"Control Flow","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"abstract":[{"text":"Define requirements that conforming types must implement.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/protocols","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","kind":"article","title":"Protocols","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Extensions":{"type":"topic","abstract":[{"text":"Add functionality to an existing type.","type":"text"}],"role":"article","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","title":"Extensions","url":"\/documentation\/the-swift-programming-language\/extensions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"abstract":[{"text":"Respond to and recover from errors.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/errorhandling","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","title":"Error Handling","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutSwift":{"abstract":[{"text":"Understand the high-level goals of the language.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/aboutswift","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift","kind":"article","title":"About Swift","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"abstract":[{"text":"Use the lowest-level components of the syntax.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/lexicalstructure","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","title":"Lexical Structure","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures":{"abstract":[{"text":"Group code that executes together, without creating a named function.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/closures","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures","kind":"article","title":"Closures","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"abstract":[{"text":"Set the initial values for a typeâ€™s stored properties and perform one-time setup.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/initialization","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","title":"Initialization","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"abstract":[{"text":"Work with common kinds of data and write basic syntax.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/thebasics","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","kind":"article","title":"The Basics","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes":{"abstract":[{"text":"Organize data using arrays, sets, and dictionaries.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/collectiontypes","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","title":"Collection Types","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"abstract":[{"text":"Access, modify, and assign values.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","kind":"article","title":"Expressions","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"abstract":[{"text":"Use built-in named and compound types.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/types","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","title":"Types","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/NestedTypes":{"abstract":[{"text":"Define types inside the scope of another type.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/nestedtypes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes","kind":"article","title":"Nested Types","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"abstract":[{"text":"Access members of an optional value without unwrapping.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/optionalchaining","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","title":"Optional Chaining","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"abstract":[{"text":"Define custom operators, perform bitwise operations, and use builder syntax.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/advancedoperators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","kind":"article","title":"Advanced Operators","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"abstract":[{"text":"Introduce types, operators, variables, and other names and constructs.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/declarations","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","title":"Declarations","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"abstract":[{"text":"Add information to declarations and types.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/attributes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","kind":"article","title":"Attributes","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ClassesAndStructures":{"abstract":[{"text":"Model custom types that encapsulate data.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/classesandstructures","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","title":"Structures and Classes","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/RevisionHistory":{"abstract":[{"text":"Review the recent changes to this book.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/revisionhistory","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory","kind":"article","title":"Document Revision History","type":"topic"}}}